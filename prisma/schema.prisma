generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id     String @id @default(uuid())
  name   String
  userId String

  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[]  @relation("StoreToCategory")
  sizes      Size[]      @relation("StoreToSize")
  colors     Color[]     @relation("StoreToColor")
  products   Product[]   @relation("StoreToProduct")
  orders     Order[]     @relation("StoreToOrder")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Billboard {
  id       String @id @default(uuid())
  storeId  String
  store    Store  @relation("StoreToBillboard", fields: [storeId], references: [id])
  label    String
  imageUrl String

  categories Category[] @relation("BillboardToCategory")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId], name: "storeId")
}

model Category {
  id          String @id @default(uuid())
  storeId     String
  name        String
  billboardId String

  store     Store     @relation("StoreToCategory", fields: [storeId], references: [id])
  billboard Billboard @relation("BillboardToCategory", fields: [billboardId], references: [id])
  products  Product[] @relation("CategoryToProduct")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId], name: "storeId")
  @@index([billboardId], name: "billboardId")
}

model Size {
  id      String @id @default(uuid())
  storeId String
  name    String
  value   String

  store    Store     @relation("StoreToSize", fields: [storeId], references: [id])
  products Product[] @relation()

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId], name: "storeId")
}

model Color {
  id        String   @id @default(uuid())
  storeId   String
  name      String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store    Store     @relation("StoreToColor", fields: [storeId], references: [id])
  products Product[] @relation()

  @@index([storeId], name: "storeId")
}

model Product {
  id         String  @id @default(uuid())
  storeId    String
  categoryId String
  name       String
  price      Decimal
  isFeatured Boolean @default(false)
  isArchived Boolean @default(false)
  sizeId     String
  colorId    String

  color    Color       @relation(fields: [colorId], references: [id])
  size     Size        @relation(fields: [sizeId], references: [id])
  category Category    @relation("CategoryToProduct", fields: [categoryId], references: [id])
  store    Store       @relation("StoreToProduct", fields: [storeId], references: [id])
  images   Image[]     @relation()
  orders   OrderItem[] @relation()

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId], name: "storeId")
  @@index([categoryId], name: "categoryId")
  @@index([sizeId], name: "sizeId")
  @@index([colorId], name: "colorId")
}

model Image {
  id        String @id @default(uuid())
  productId String
  url       String

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId], name: "productId")
}

model Order {
  id         String      @id @default(uuid())
  storeId    String
  orderItems OrderItem[] @relation("OrderToOrderItem")
  isPaid     Boolean     @default(false)
  phone      String      @default("")
  address    String      @default("")

  store Store @relation("StoreToOrder", fields: [storeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId], name: "storeId")
}

model OrderItem {
  id        String @id @default(uuid())
  orderId   String
  productId String

  order   Order   @relation("OrderToOrderItem", fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orderId], name: "orderId")
  @@index([productId], name: "productId")
}
